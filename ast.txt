Module(
	body=[
		Import(
			names=[
				alias(
					name='sys'
				)
			]
		),
		Import(
			names=[
				alias(
					name='test'
				)
			]
		),
		FunctionDef(
			name='abbreviate',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=''
					)
				),
				Assign(
					targets=[
						Name(
							id='unit0',
							ctx=Store()
						)
					],
					value=Call(
						func=Attribute(
							value=Name(
								id='unit',
								ctx=Load()
							),
							attr='lower',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Match(
					subject=Name(
						id='unit1',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='square yard'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='yd2'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='square foot'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='ft2'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='square inch'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='in2'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='square mile'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='mi2'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='square kilometer'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='km2'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='square meter'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='m2'
									)
								)
							]
						),
						match_case(
							pattern=MatchAs(),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='unit2',
										ctx=Load()
									)
								)
							]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='normalize',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Match(
					subject=Name(
						id='unit',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='yd2'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=9
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='ft2'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='num',
										ctx=Load()
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='in2'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=144
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mi2'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=27880000
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='km2'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=10760000
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='m2'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=10.764
										)
									)
								)
							]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='convert_area',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='frm'
					),
					arg(
						arg='to'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='frm',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='to',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='to',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='num',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='normalize',
							ctx=Load()
						),
						args=[
							Name(
								id='num',
								ctx=Load()
							),
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Match(
					subject=Name(
						id='to',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='yd2'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=9
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='ft2'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='num',
										ctx=Load()
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='in2'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=144
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mi2'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=27880000
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='km2'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=10760000
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='m2'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=10.764
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchAs(),
							body=[
								Expr(
									value=Call(
										func=Name(
											id='print',
											ctx=Load()
										),
										args=[
											JoinedStr(
												values=[
													Constant(
														value="Unknown unit: '"
													), FormattedValue(
														value=Name(
															id='to', ctx=Load()
														), conversion=-1
													), Constant(
														value="'"
													)
												]
											)
										],
										keywords=[]
									)
								)
							]
						)
					]
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='round',
							ctx=Load()
						),
						args=[
							Name(
								id='result',
								ctx=Load()
							),
							Constant(
								value=2
							)
						],
						keywords=[]
					)
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='display_valid_units',
			args=arguments(
				posonlyargs=[],
				args=[],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='temps',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='Temperatures:'
							),
							Constant(
								value='f'
							),
							Constant(
								value='c'
							),
							Constant(
								value='k'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='dists',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='Distances:'
							),
							Constant(
								value='mm'
							),
							Constant(
								value='cm'
							),
							Constant(
								value='m'
							),
							Constant(
								value='km'
							),
							Constant(
								value='in'
							),
							Constant(
								value='ft'
							),
							Constant(
								value='yd'
							),
							Constant(
								value='mi'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='masses',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='Masses:'
							),
							Constant(
								value='mg'
							),
							Constant(
								value='g'
							),
							Constant(
								value='kg'
							),
							Constant(
								value='oz'
							),
							Constant(
								value='lb'
							),
							Constant(
								value='t'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='times',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='Times:'
							),
							Constant(
								value='s'
							),
							Constant(
								value='min'
							),
							Constant(
								value='h'
							),
							Constant(
								value='day'
							),
							Constant(
								value='week'
							),
							Constant(
								value='month'
							),
							Constant(
								value='year'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='volumes',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='Volumes:'
							),
							Constant(
								value='mL'
							),
							Constant(
								value='L'
							),
							Constant(
								value='m3'
							),
							Constant(
								value='qt'
							),
							Constant(
								value='gal'
							),
							Constant(
								value='ft3'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='areas',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='Areas:'
							),
							Constant(
								value='in2'
							),
							Constant(
								value='ft2'
							),
							Constant(
								value='yd2'
							),
							Constant(
								value='mi2'
							),
							Constant(
								value='m2'
							),
							Constant(
								value='km2'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='speeds',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='Speeds:'
							),
							Constant(
								value='m/s'
							),
							Constant(
								value='km/h'
							),
							Constant(
								value='mph'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='units',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Name(
								id='temps',
								ctx=Load()
							),
							Name(
								id='dists',
								ctx=Load()
							),
							Name(
								id='masses',
								ctx=Load()
							),
							Name(
								id='times',
								ctx=Load()
							),
							Name(
								id='volumes',
								ctx=Load()
							),
							Name(
								id='areas',
								ctx=Load()
							),
							Name(
								id='speeds',
								ctx=Load()
							)
						],
						ctx=Load()
					)
				),
				For(
					target=Name(
						id='unit',
						ctx=Store()
					),
					iter=Name(
						id='units',
						ctx=Load()
					),
					body=[
						For(
							target=Name(
								id='item',
								ctx=Store()
							),
							iter=Name(
								id='unit',
								ctx=Load()
							),
							body=[
								Expr(
									value=Call(
										func=Name(
											id='print',
											ctx=Load()
										),
										args=[
											Name(
												id='item',
												ctx=Load()
											)
										],
										keywords=[
											keyword(
												arg='end',
												value=Constant(
													value=' '
												)
											)
										]
									)
								)
							],
							orelse=[]
						),
						Expr(
							value=Call(
								func=Name(
									id='print',
									ctx=Load()
								),
								args=[
									Constant(
										value=''
									)
								],
								keywords=[]
							)
						)
					],
					orelse=[]
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='check_cl_args',
			args=arguments(
				posonlyargs=[],
				args=[],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='args',
							ctx=Store()
						)
					],
					value=Attribute(
						value=Name(
							id='sys',
							ctx=Load()
						),
						attr='argv',
						ctx=Load()
					)
				),
				If(
					test=Compare(
						left=Call(
							func=Name(
								id='len',
								ctx=Load()
							),
							args=[
								Name(
									id='args',
									ctx=Load()
								)
							],
							keywords=[]
						),
						ops=[
							Gt()
						],
						comparators=[
							Constant(
								value=1
							)
						]
					),
					body=[
						If(
							test=BoolOp(
								op=Or(),
								values=[
									Compare(
										left=Constant(
											value='-h'
										),
										ops=[
											In()
										],
										comparators=[
											Name(
												id='args',
												ctx=Load()
											)
										]
									),
									Compare(
										left=Constant(
											value='--help'
										),
										ops=[
											In()
										],
										comparators=[
											Name(
												id='args',
												ctx=Load()
											)
										]
									)
								]
							),
							body=[
								Expr(
									value=Call(
										func=Name(
											id='display_valid_units',
											ctx=Load()
										),
										args=[],
										keywords=[]
									)
								),
								Return(
									value=Tuple(
										elts=[
											Constant(
												value=None
											),
											Constant(
												value=False
											)
										],
										ctx=Load()
									)
								)
							],
							orelse=[
								If(
									test=BoolOp(
										op=Or(),
										values=[
											Compare(
												left=Constant(
													value='-t'
												),
												ops=[
													In()
												],
												comparators=[
													Name(
														id='args',
														ctx=Load()
													)
												]
											),
											Compare(
												left=Constant(
													value='--test'
												),
												ops=[
													In()
												],
												comparators=[
													Name(
														id='args',
														ctx=Load()
													)
												]
											)
										]
									),
									body=[
										Expr(
											value=Call(
												func=Attribute(
													value=Name(
														id='test',
														ctx=Load()
													),
													attr='run_tests',
													ctx=Load()
												),
												args=[],
												keywords=[]
											)
										),
										Return(
											value=Tuple(
												elts=[
													Constant(
														value=None
													),
													Constant(
														value=False
													)
												],
												ctx=Load()
											)
										)
									],
									orelse=[]
								)
							]
						),
						Return(
							value=Tuple(
								elts=[
									Attribute(
										value=Name(
											id='sys',
											ctx=Load()
										),
										attr='argv',
										ctx=Load()
									),
									Constant(
										value=True
									)
								],
								ctx=Load()
							)
						)
					],
					orelse=[
						Return(
							value=Tuple(
								elts=[
									Constant(
										value=None
									),
									Constant(
										value=False
									)
								],
								ctx=Load()
							)
						)
					]
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='select_conversion',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='arg'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='temps',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='f'
							),
							Constant(
								value='c'
							),
							Constant(
								value='k'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='dists',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='mm'
							),
							Constant(
								value='cm'
							),
							Constant(
								value='m'
							),
							Constant(
								value='km'
							),
							Constant(
								value='in'
							),
							Constant(
								value='ft'
							),
							Constant(
								value='yd'
							),
							Constant(
								value='mi'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='masses',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='mg'
							),
							Constant(
								value='g'
							),
							Constant(
								value='kg'
							),
							Constant(
								value='oz'
							),
							Constant(
								value='lb'
							),
							Constant(
								value='t'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='times',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='s'
							),
							Constant(
								value='min'
							),
							Constant(
								value='h'
							),
							Constant(
								value='day'
							),
							Constant(
								value='week'
							),
							Constant(
								value='month'
							),
							Constant(
								value='year'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='volumes',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='mL'
							),
							Constant(
								value='L'
							),
							Constant(
								value='m3'
							),
							Constant(
								value='qt'
							),
							Constant(
								value='gal'
							),
							Constant(
								value='ft3'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='areas',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='in2'
							),
							Constant(
								value='ft2'
							),
							Constant(
								value='yd2'
							),
							Constant(
								value='mi2'
							),
							Constant(
								value='m2'
							),
							Constant(
								value='km2'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='speeds',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='m/s'
							),
							Constant(
								value='km/h'
							),
							Constant(
								value='mph'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=''
					)
				),
				If(
					test=Compare(
						left=Name(
							id='arg',
							ctx=Load()
						),
						ops=[
							In()
						],
						comparators=[
							Name(
								id='temps',
								ctx=Load()
							)
						]
					),
					body=[
						Assign(
							targets=[
								Name(
									id='result',
									ctx=Store()
								)
							],
							value=Constant(
								value='temperature'
							)
						)
					],
					orelse=[
						If(
							test=Compare(
								left=Name(
									id='arg',
									ctx=Load()
								),
								ops=[
									In()
								],
								comparators=[
									Name(
										id='dists',
										ctx=Load()
									)
								]
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='distance'
									)
								)
							],
							orelse=[
								If(
									test=Compare(
										left=Name(
											id='arg',
											ctx=Load()
										),
										ops=[
											In()
										],
										comparators=[
											Name(
												id='masses',
												ctx=Load()
											)
										]
									),
									body=[
										Assign(
											targets=[
												Name(
													id='result',
													ctx=Store()
												)
											],
											value=Constant(
												value='mass'
											)
										)
									],
									orelse=[
										If(
											test=Compare(
												left=Name(
													id='arg',
													ctx=Load()
												),
												ops=[
													In()
												],
												comparators=[
													Name(
														id='times',
														ctx=Load()
													)
												]
											),
											body=[
												Assign(
													targets=[
														Name(
															id='result',
															ctx=Store()
														)
													],
													value=Constant(
														value='time'
													)
												)
											],
											orelse=[
												If(
													test=Compare(
														left=Name(
															id='arg',
															ctx=Load()
														),
														ops=[
															In()
														],
														comparators=[
															Name(
																id='volumes',
																ctx=Load()
															)
														]
													),
													body=[
														Assign(
															targets=[
																Name(
																	id='result',
																	ctx=Store()
																)
															],
															value=Constant(
																value='volume'
															)
														)
													],
													orelse=[
														If(
															test=Compare(
																left=Name(
																	id='arg',
																	ctx=Load()
																),
																ops=[
																	In()
																],
																comparators=[
																	Name(
																		id='areas',
																		ctx=Load()
																	)
																]
															),
															body=[
																Assign(
																	targets=[
																		Name(
																			id='result',
																			ctx=Store()
																		)
																	],
																	value=Constant(
																		value='area'
																	)
																)
															],
															orelse=[
																If(
																	test=Compare(
																		left=Name(
																			id='arg',
																			ctx=Load()
																		),
																		ops=[
																			In()
																		],
																		comparators=[
																			Name(
																				id='speeds',
																				ctx=Load()
																			)
																		]
																	),
																	body=[
																		Assign(
																			targets=[
																				Name(
																					id='result',
																					ctx=Store()
																				)
																			],
																			value=Constant(
																				value='speed'
																			)
																		)
																	],
																	orelse=[
																		Expr(
																			value=Call(
																				func=Name(
																					id='print',
																					ctx=Load()
																				),
																				args=[
																					Constant(
																						value='Unknown conversion.'
																					)
																				],
																				keywords=[]
																			)
																		)
																	]
																)
															]
														)
													]
												)
											]
										)
									]
								)
							]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='convert',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='args'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='conversion',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='select_conversion',
							ctx=Load()
						),
						args=[
							Subscript(
								value=Name(
									id='args',
									ctx=Load()
								),
								slice=Constant(
									value=2
								),
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='num',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='float',
							ctx=Load()
						),
						args=[
							Subscript(
								value=Name(
									id='args',
									ctx=Load()
								),
								slice=Constant(
									value=1
								),
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='unit1',
							ctx=Store()
						)
					],
					value=Subscript(
						value=Name(
							id='args',
							ctx=Load()
						),
						slice=Constant(
							value=2
						),
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='unit2',
							ctx=Store()
						)
					],
					value=Subscript(
						value=Name(
							id='args',
							ctx=Load()
						),
						slice=Constant(
							value=3
						),
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=''
					)
				),
				Match(
					subject=Name(
						id='conversion',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='temperature'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Call(
										func=Name(
											id='convert_temperature',
											ctx=Load()
										),
										args=[
											Name(
												id='num',
												ctx=Load()
											),
											Name(
												id='unit1',
												ctx=Load()
											),
											Name(
												id='unit2',
												ctx=Load()
											)
										],
										keywords=[]
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='distance'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Call(
										func=Name(
											id='convert_distance',
											ctx=Load()
										),
										args=[
											Name(
												id='num',
												ctx=Load()
											),
											Name(
												id='unit1',
												ctx=Load()
											),
											Name(
												id='unit2',
												ctx=Load()
											)
										],
										keywords=[]
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mass'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Call(
										func=Name(
											id='convert_mass',
											ctx=Load()
										),
										args=[
											Name(
												id='num',
												ctx=Load()
											),
											Name(
												id='unit1',
												ctx=Load()
											),
											Name(
												id='unit2',
												ctx=Load()
											)
										],
										keywords=[]
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='time'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Call(
										func=Name(
											id='convert_time',
											ctx=Load()
										),
										args=[
											Name(
												id='num',
												ctx=Load()
											),
											Name(
												id='unit1',
												ctx=Load()
											),
											Name(
												id='unit2',
												ctx=Load()
											)
										],
										keywords=[]
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='volume'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Call(
										func=Name(
											id='convert_volume',
											ctx=Load()
										),
										args=[
											Name(
												id='num',
												ctx=Load()
											),
											Name(
												id='unit1',
												ctx=Load()
											),
											Name(
												id='unit2',
												ctx=Load()
											)
										],
										keywords=[]
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='area'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Call(
										func=Name(
											id='convert_area',
											ctx=Load()
										),
										args=[
											Name(
												id='num',
												ctx=Load()
											),
											Name(
												id='unit1',
												ctx=Load()
											),
											Name(
												id='unit2',
												ctx=Load()
											)
										],
										keywords=[]
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='speed'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Call(
										func=Name(
											id='convert_speed',
											ctx=Load()
										),
										args=[
											Name(
												id='num',
												ctx=Load()
											),
											Name(
												id='unit1',
												ctx=Load()
											),
											Name(
												id='unit2',
												ctx=Load()
											)
										],
										keywords=[]
									)
								)
							]
						)
					]
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Subscript(
											value=Name(
												id='args',
												ctx=Load()
											),
											slice=Constant(
												value=1
											),
											ctx=Load()
										),
										conversion=-1
									),
									FormattedValue(
										value=Name(
											id='unit1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value=' = '
									),
									FormattedValue(
										value=Name(
											id='result',
											ctx=Load()
										),
										conversion=-1
									),
									FormattedValue(
										value=Name(
											id='unit2',
											ctx=Load()
										),
										conversion=-1
									)
								]
							)
						],
						keywords=[]
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='abbreviate',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=''
					)
				),
				Assign(
					targets=[
						Name(
							id='unit',
							ctx=Store()
						)
					],
					value=Call(
						func=Attribute(
							value=Name(
								id='unit',
								ctx=Load()
							),
							attr='lower',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Match(
					subject=Name(
						id='unit',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='meter'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='m'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='kilometer'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='km'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='centimeter'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='cm'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='millimeter'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='mm'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='inch'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='in'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='foot'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='ft'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='yard'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='yd'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mile'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='mi'
									)
								)
							]
						),
						match_case(
							pattern=MatchAs(),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='unit',
										ctx=Load()
									)
								)
							]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='check_unit_type',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='metric',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='m'
							),
							Constant(
								value='km'
							),
							Constant(
								value='cm'
							),
							Constant(
								value='mm'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='imperial',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='in'
							),
							Constant(
								value='ft'
							),
							Constant(
								value='yd'
							),
							Constant(
								value='mi'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=''
					)
				),
				If(
					test=Compare(
						left=Name(
							id='unit',
							ctx=Load()
						),
						ops=[
							In()
						],
						comparators=[
							Name(
								id='metric',
								ctx=Load()
							)
						]
					),
					body=[
						Assign(
							targets=[
								Name(
									id='result',
									ctx=Store()
								)
							],
							value=Constant(
								value='metric'
							)
						)
					],
					orelse=[
						If(
							test=Compare(
								left=Name(
									id='unit',
									ctx=Load()
								),
								ops=[
									In()
								],
								comparators=[
									Name(
										id='imperial',
										ctx=Load()
									)
								]
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='imperial'
									)
								)
							],
							orelse=[]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='normalize',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='unit',
							ctx=Store()
						)
					],
					value=Call(
						func=Attribute(
							value=Name(
								id='unit',
								ctx=Load()
							),
							attr='lower',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='unit',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='unit',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Assign(
					targets=[
						Name(
							id='unit_type',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='check_unit_type',
							ctx=Load()
						),
						args=[
							Name(
								id='unit',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				If(
					test=Compare(
						left=Name(
							id='unit_type',
							ctx=Load()
						),
						ops=[
							Eq()
						],
						comparators=[
							Constant(
								value='metric'
							)
						]
					),
					body=[
						Assign(
							targets=[
								Name(
									id='temp',
									ctx=Store()
								)
							],
							value=Constant(
								value=0
							)
						),
						Match(
							subject=Name(
								id='unit',
								ctx=Load()
							),
							cases=[
								match_case(
									pattern=MatchValue(
										value=Constant(
											value='m'
										)
									),
									body=[
										Assign(
											targets=[
												Name(
													id='temp',
													ctx=Store()
												)
											],
											value=Name(
												id='num',
												ctx=Load()
											)
										)
									]
								),
								match_case(
									pattern=MatchValue(
										value=Constant(
											value='km'
										)
									),
									body=[
										Assign(
											targets=[
												Name(
													id='temp',
													ctx=Store()
												)
											],
											value=BinOp(
												left=Name(
													id='num',
													ctx=Load()
												),
												op=Mult(),
												right=Constant(
													value=1000
												)
											)
										)
									]
								),
								match_case(
									pattern=MatchValue(
										value=Constant(
											value='cm'
										)
									),
									body=[
										Assign(
											targets=[
												Name(
													id='temp',
													ctx=Store()
												)
											],
											value=BinOp(
												left=Name(
													id='num',
													ctx=Load()
												),
												op=Div(),
												right=Constant(
													value=100
												)
											)
										)
									]
								),
								match_case(
									pattern=MatchValue(
										value=Constant(
											value='mm'
										)
									),
									body=[
										Assign(
											targets=[
												Name(
													id='temp',
													ctx=Store()
												)
											],
											value=BinOp(
												left=Name(
													id='num',
													ctx=Load()
												),
												op=Div(),
												right=Constant(
													value=1000
												)
											)
										)
									]
								)
							]
						),
						Assign(
							targets=[
								Name(
									id='result',
									ctx=Store()
								)
							],
							value=Name(
								id='temp',
								ctx=Load()
							)
						)
					],
					orelse=[
						If(
							test=Compare(
								left=Name(
									id='unit_type',
									ctx=Load()
								),
								ops=[
									Eq()
								],
								comparators=[
									Constant(
										value='imperial'
									)
								]
							),
							body=[
								Assign(
									targets=[
										Name(
											id='temp',
											ctx=Store()
										)
									],
									value=Constant(
										value=0
									)
								),
								Match(
									subject=Name(
										id='unit',
										ctx=Load()
									),
									cases=[
										match_case(
											pattern=MatchValue(
												value=Constant(
													value='in'
												)
											),
											body=[
												Assign(
													targets=[
														Name(
															id='temp',
															ctx=Store()
														)
													],
													value=BinOp(
														left=Name(
															id='num',
															ctx=Load()
														),
														op=Div(),
														right=Constant(
															value=36
														)
													)
												)
											]
										),
										match_case(
											pattern=MatchValue(
												value=Constant(
													value='ft'
												)
											),
											body=[
												Assign(
													targets=[
														Name(
															id='temp',
															ctx=Store()
														)
													],
													value=BinOp(
														left=Name(
															id='num',
															ctx=Load()
														),
														op=Div(),
														right=Constant(
															value=3
														)
													)
												)
											]
										),
										match_case(
											pattern=MatchValue(
												value=Constant(
													value='yd'
												)
											),
											body=[
												Assign(
													targets=[
														Name(
															id='temp',
															ctx=Store()
														)
													],
													value=Name(
														id='num',
														ctx=Load()
													)
												)
											]
										),
										match_case(
											pattern=MatchValue(
												value=Constant(
													value='mi'
												)
											),
											body=[
												Assign(
													targets=[
														Name(
															id='temp',
															ctx=Store()
														)
													],
													value=BinOp(
														left=Name(
															id='num',
															ctx=Load()
														),
														op=Mult(),
														right=Constant(
															value=1760
														)
													)
												)
											]
										)
									]
								),
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='temp',
										ctx=Load()
									)
								)
							],
							orelse=[
								Expr(
									value=Call(
										func=Name(
											id='print',
											ctx=Load()
										),
										args=[
											JoinedStr(
												values=[
													Constant(
														value="Unrecognized unit: '"
													), FormattedValue(
														value=Name(
															id='unit', ctx=Load()
														), conversion=-1
													), Constant(
														value="'"
													)
												]
											)
										],
										keywords=[]
									)
								)
							]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='convert_from_imperial',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='to'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Match(
					subject=Name(
						id='to',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='m'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=1.094
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='km'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=1094
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='cm'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=91.44
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mm'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=914.4
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='in'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=36
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='ft'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=3
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='yd'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='num',
										ctx=Load()
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mi'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=1760
										)
									)
								)
							]
						)
					]
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='round',
							ctx=Load()
						),
						args=[
							Name(
								id='result',
								ctx=Load()
							),
							Constant(
								value=2
							)
						],
						keywords=[]
					)
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='convert_from_metric',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='to'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Match(
					subject=Name(
						id='to',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='m'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='num',
										ctx=Load()
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='km'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=1000
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='cm'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=100
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mm'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=1000
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='in'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=39.37
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='ft'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=3.281
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='yd'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=1.094
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mi'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=1609
										)
									)
								)
							]
						)
					]
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='round',
							ctx=Load()
						),
						args=[
							Name(
								id='result',
								ctx=Load()
							),
							Constant(
								value=2
							)
						],
						keywords=[]
					)
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='convert_distance',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='frm'
					),
					arg(
						arg='to'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='frm',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='to',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='to',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='num',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='normalize',
							ctx=Load()
						),
						args=[
							Name(
								id='num',
								ctx=Load()
							),
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='unit_type',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='check_unit_type',
							ctx=Load()
						),
						args=[
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Match(
					subject=Name(
						id='unit_type',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='imperial'
								)
							),
							body=[
								Return(
									value=Call(
										func=Name(
											id='convert_from_imperial',
											ctx=Load()
										),
										args=[
											Name(
												id='num',
												ctx=Load()
											),
											Name(
												id='to',
												ctx=Load()
											)
										],
										keywords=[]
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='metric'
								)
							),
							body=[
								Return(
									value=Call(
										func=Name(
											id='convert_from_metric',
											ctx=Load()
										),
										args=[
											Name(
												id='num',
												ctx=Load()
											),
											Name(
												id='to',
												ctx=Load()
											)
										],
										keywords=[]
									)
								)
							]
						)
					]
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='abbreviate',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=''
					)
				),
				Assign(
					targets=[
						Name(
							id='unit',
							ctx=Store()
						)
					],
					value=Call(
						func=Attribute(
							value=Name(
								id='unit',
								ctx=Load()
							),
							attr='lower',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Match(
					subject=Name(
						id='unit',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='gram'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='g'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='kilogram'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='kg'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='milligram'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='mg'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='ton'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='t'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='pound'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='lb'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='ounce'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='oz'
									)
								)
							]
						),
						match_case(
							pattern=MatchAs(),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='unit',
										ctx=Load()
									)
								)
							]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='check_unit_type',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='metric',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='g'
							),
							Constant(
								value='kg'
							),
							Constant(
								value='mg'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='imperial',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='t'
							),
							Constant(
								value='lb'
							),
							Constant(
								value='oz'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=''
					)
				),
				If(
					test=Compare(
						left=Name(
							id='unit',
							ctx=Load()
						),
						ops=[
							In()
						],
						comparators=[
							Name(
								id='metric',
								ctx=Load()
							)
						]
					),
					body=[
						Assign(
							targets=[
								Name(
									id='result',
									ctx=Store()
								)
							],
							value=Constant(
								value='metric'
							)
						)
					],
					orelse=[
						If(
							test=Compare(
								left=Name(
									id='unit',
									ctx=Load()
								),
								ops=[
									In()
								],
								comparators=[
									Name(
										id='imperial',
										ctx=Load()
									)
								]
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='imperial'
									)
								)
							],
							orelse=[]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='normalize',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='unit',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='unit',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Assign(
					targets=[
						Name(
							id='unit_type',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='check_unit_type',
							ctx=Load()
						),
						args=[
							Name(
								id='unit',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				If(
					test=Compare(
						left=Name(
							id='unit_type',
							ctx=Load()
						),
						ops=[
							Eq()
						],
						comparators=[
							Constant(
								value='metric'
							)
						]
					),
					body=[
						Match(
							subject=Name(
								id='unit',
								ctx=Load()
							),
							cases=[
								match_case(
									pattern=MatchValue(
										value=Constant(
											value='mg'
										)
									),
									body=[
										Assign(
											targets=[
												Name(
													id='result',
													ctx=Store()
												)
											],
											value=BinOp(
												left=Name(
													id='num',
													ctx=Load()
												),
												op=Div(),
												right=Constant(
													value=1000
												)
											)
										)
									]
								),
								match_case(
									pattern=MatchValue(
										value=Constant(
											value='g'
										)
									),
									body=[
										Assign(
											targets=[
												Name(
													id='result',
													ctx=Store()
												)
											],
											value=Name(
												id='num',
												ctx=Load()
											)
										)
									]
								),
								match_case(
									pattern=MatchValue(
										value=Constant(
											value='kg'
										)
									),
									body=[
										Assign(
											targets=[
												Name(
													id='result',
													ctx=Store()
												)
											],
											value=BinOp(
												left=Name(
													id='num',
													ctx=Load()
												),
												op=Mult(),
												right=Constant(
													value=1000
												)
											)
										)
									]
								)
							]
						)
					],
					orelse=[
						If(
							test=Compare(
								left=Name(
									id='unit_type',
									ctx=Load()
								),
								ops=[
									Eq()
								],
								comparators=[
									Constant(
										value='imperial'
									)
								]
							),
							body=[
								Match(
									subject=Name(
										id='unit',
										ctx=Load()
									),
									cases=[
										match_case(
											pattern=MatchValue(
												value=Constant(
													value='oz'
												)
											),
											body=[
												Assign(
													targets=[
														Name(
															id='result',
															ctx=Store()
														)
													],
													value=BinOp(
														left=Name(
															id='num',
															ctx=Load()
														),
														op=Div(),
														right=Constant(
															value=16
														)
													)
												)
											]
										),
										match_case(
											pattern=MatchValue(
												value=Constant(
													value='lb'
												)
											),
											body=[
												Assign(
													targets=[
														Name(
															id='result',
															ctx=Store()
														)
													],
													value=Name(
														id='num',
														ctx=Load()
													)
												)
											]
										),
										match_case(
											pattern=MatchValue(
												value=Constant(
													value='t'
												)
											),
											body=[
												Assign(
													targets=[
														Name(
															id='result',
															ctx=Store()
														)
													],
													value=BinOp(
														left=Name(
															id='num',
															ctx=Load()
														),
														op=Mult(),
														right=Constant(
															value=2000
														)
													)
												)
											]
										)
									]
								)
							],
							orelse=[
								Expr(
									value=Call(
										func=Name(
											id='print',
											ctx=Load()
										),
										args=[
											JoinedStr(
												values=[
													Constant(
														value="Unrecognized unit: '"
													), FormattedValue(
														value=Name(
															id='unit', ctx=Load()
														), conversion=-1
													), Constant(
														value="'"
													)
												]
											)
										],
										keywords=[]
									)
								)
							]
						)
					]
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='round',
							ctx=Load()
						),
						args=[
							Name(
								id='result',
								ctx=Load()
							),
							Constant(
								value=2
							)
						],
						keywords=[]
					)
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='convert_from_imperial',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='to'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Match(
					subject=Name(
						id='to',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mg'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=453600
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='g'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=453.6
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='kg'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=2.205
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='oz'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=16
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='lb'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='num',
										ctx=Load()
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='t'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=2000
										)
									)
								)
							]
						)
					]
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='round',
							ctx=Load()
						),
						args=[
							Name(
								id='result',
								ctx=Load()
							),
							Constant(
								value=2
							)
						],
						keywords=[]
					)
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='convert_from_metric',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='to'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Match(
					subject=Name(
						id='to',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mg'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=1000
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='g'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='num',
										ctx=Load()
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='kg'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=1000
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='oz'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=28.35
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='lb'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=453.6
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='t'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=907200
										)
									)
								)
							]
						)
					]
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='round',
							ctx=Load()
						),
						args=[
							Name(
								id='result',
								ctx=Load()
							),
							Constant(
								value=2
							)
						],
						keywords=[]
					)
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='convert_mass',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='frm'
					),
					arg(
						arg='to'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='num',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='normalize',
							ctx=Load()
						),
						args=[
							Name(
								id='num',
								ctx=Load()
							),
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='unit_type',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='check_unit_type',
							ctx=Load()
						),
						args=[
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Match(
					subject=Name(
						id='unit_type',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='imperial'
								)
							),
							body=[
								Return(
									value=Call(
										func=Name(
											id='convert_from_imperial',
											ctx=Load()
										),
										args=[
											Name(
												id='num',
												ctx=Load()
											),
											Name(
												id='to',
												ctx=Load()
											)
										],
										keywords=[]
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='metric'
								)
							),
							body=[
								Return(
									value=Call(
										func=Name(
											id='convert_from_metric',
											ctx=Load()
										),
										args=[
											Name(
												id='num',
												ctx=Load()
											),
											Name(
												id='to',
												ctx=Load()
											)
										],
										keywords=[]
									)
								)
							]
						)
					]
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='abbreviate',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=''
					)
				),
				Assign(
					targets=[
						Name(
							id='unit',
							ctx=Store()
						)
					],
					value=Call(
						func=Attribute(
							value=Name(
								id='unit',
								ctx=Load()
							),
							attr='lower',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Match(
					subject=Name(
						id='unit',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='second'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='s'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='minute'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='min'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='hour'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='h'
									)
								)
							]
						),
						match_case(
							pattern=MatchAs(),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='unit',
										ctx=Load()
									)
								)
							]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='normalize',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Assign(
					targets=[
						Name(
							id='unit',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='unit',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Match(
					subject=Name(
						id='unit',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='s'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=3600
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='min'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=60
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='h'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='num',
										ctx=Load()
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='day'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=24
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='week'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=168
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='month'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=730
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='year'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=8760
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchAs(),
							body=[
								Expr(
									value=Call(
										func=Name(
											id='print',
											ctx=Load()
										),
										args=[
											JoinedStr(
												values=[
													Constant(
														value="Unrecognized unit: '"
													), FormattedValue(
														value=Name(
															id='unit', ctx=Load()
														), conversion=-1
													), Constant(
														value="'"
													)
												]
											)
										],
										keywords=[]
									)
								)
							]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='convert_time',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='frm'
					),
					arg(
						arg='to'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='frm',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='to',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='to',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='num',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='normalize',
							ctx=Load()
						),
						args=[
							Name(
								id='num',
								ctx=Load()
							),
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Match(
					subject=Name(
						id='to',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='s'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=3600
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='min'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=60
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='h'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='num',
										ctx=Load()
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='day'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=24
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='week'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=168
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='month'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=730
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='year'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=8760
										)
									)
								)
							]
						)
					]
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='round',
							ctx=Load()
						),
						args=[
							Name(
								id='result',
								ctx=Load()
							),
							Constant(
								value=2
							)
						],
						keywords=[]
					)
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='main',
			args=arguments(
				posonlyargs=[],
				args=[],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Tuple(
							elts=[
								Name(
									id='args',
									ctx=Store()
								),
								Name(
									id='cl_call',
									ctx=Store()
								)
							],
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='check_cl_args',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				If(
					test=Name(
						id='cl_call',
						ctx=Load()
					),
					body=[
						Expr(
							value=Call(
								func=Name(
									id='convert',
									ctx=Load()
								),
								args=[
									Name(
										id='args',
										ctx=Load()
									)
								],
								keywords=[]
							)
						)
					],
					orelse=[]
				)
			],
			decorator_list=[],
			type_params=[]
		),
		If(
			test=Compare(
				left=Name(
					id='__name__',
					ctx=Load()
				),
				ops=[
					Eq()
				],
				comparators=[
					Constant(
						value='__main__'
					)
				]
			),
			body=[
				Expr(
					value=Call(
						func=Name(
							id='main',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				)
			],
			orelse=[]
		),
		FunctionDef(
			name='abbreviate',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=''
					)
				),
				Assign(
					targets=[
						Name(
							id='unit',
							ctx=Store()
						)
					],
					value=Call(
						func=Attribute(
							value=Name(
								id='unit',
								ctx=Load()
							),
							attr='lower',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Match(
					subject=Name(
						id='unit',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='meters per second'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='m/s'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='m per second'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='m/s'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='kilometers per hour'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='km/h'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='km per hour'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='km/h'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='miles per hour'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='mph'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mi per hour'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='mph'
									)
								)
							]
						),
						match_case(
							pattern=MatchAs(),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='unit',
										ctx=Load()
									)
								)
							]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='normalize',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Match(
					subject=Name(
						id='unit',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='m/s'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='num',
										ctx=Load()
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='km/h'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=3.6
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mph'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=2.237
										)
									)
								)
							]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='convert_speed',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='frm'
					),
					arg(
						arg='to'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='frm',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='to',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='to',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='num',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='normalize',
							ctx=Load()
						),
						args=[
							Name(
								id='num',
								ctx=Load()
							),
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Match(
					subject=Name(
						id='to',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='m/s'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='num',
										ctx=Load()
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='km/h'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=3.6
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mph'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=2.237
										)
									)
								)
							]
						)
					]
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='round',
							ctx=Load()
						),
						args=[
							Name(
								id='result',
								ctx=Load()
							),
							Constant(
								value=2
							)
						],
						keywords=[]
					)
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='abbreviate',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=''
					)
				),
				Assign(
					targets=[
						Name(
							id='unit',
							ctx=Store()
						)
					],
					value=Call(
						func=Attribute(
							value=Name(
								id='unit',
								ctx=Load()
							),
							attr='lower',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Match(
					subject=Name(
						id='unit',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='fahrenheit'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='f'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='celsius'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='c'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='kelvin'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='k'
									)
								)
							]
						),
						match_case(
							pattern=MatchAs(),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='unit',
										ctx=Load()
									)
								)
							]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='convert_temperature',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='frm'
					),
					arg(
						arg='to'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='frm',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='to',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='to',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				If(
					test=Compare(
						left=Name(
							id='frm',
							ctx=Load()
						),
						ops=[
							Eq()
						],
						comparators=[
							Constant(
								value='f'
							)
						]
					),
					body=[
						Match(
							subject=Name(
								id='to',
								ctx=Load()
							),
							cases=[
								match_case(
									pattern=MatchValue(
										value=Constant(
											value='c'
										)
									),
									body=[
										Assign(
											targets=[
												Name(
													id='result',
													ctx=Store()
												)
											],
											value=BinOp(
												left=BinOp(
													left=BinOp(
														left=Name(
															id='num',
															ctx=Load()
														),
														op=Sub(),
														right=Constant(
															value=32
														)
													),
													op=Mult(),
													right=Constant(
														value=5
													)
												),
												op=Div(),
												right=Constant(
													value=9
												)
											)
										)
									]
								),
								match_case(
									pattern=MatchValue(
										value=Constant(
											value='k'
										)
									),
									body=[
										Assign(
											targets=[
												Name(
													id='result',
													ctx=Store()
												)
											],
											value=BinOp(
												left=BinOp(
													left=BinOp(
														left=BinOp(
															left=Name(
																id='num',
																ctx=Load()
															),
															op=Sub(),
															right=Constant(
																value=32
															)
														),
														op=Mult(),
														right=Constant(
															value=5
														)
													),
													op=Div(),
													right=Constant(
														value=9
													)
												),
												op=Add(),
												right=Constant(
													value=273.15
												)
											)
										)
									]
								),
								match_case(
									pattern=MatchValue(
										value=Constant(
											value='f'
										)
									),
									body=[
										Assign(
											targets=[
												Name(
													id='result',
													ctx=Store()
												)
											],
											value=Name(
												id='num',
												ctx=Load()
											)
										)
									]
								)
							]
						)
					],
					orelse=[
						If(
							test=Compare(
								left=Name(
									id='frm',
									ctx=Load()
								),
								ops=[
									Eq()
								],
								comparators=[
									Constant(
										value='c'
									)
								]
							),
							body=[
								Match(
									subject=Name(
										id='to',
										ctx=Load()
									),
									cases=[
										match_case(
											pattern=MatchValue(
												value=Constant(
													value='f'
												)
											),
											body=[
												Assign(
													targets=[
														Name(
															id='result',
															ctx=Store()
														)
													],
													value=BinOp(
														left=BinOp(
															left=BinOp(
																left=Name(
																	id='num',
																	ctx=Load()
																),
																op=Mult(),
																right=Constant(
																	value=9
																)
															),
															op=Div(),
															right=Constant(
																value=5
															)
														),
														op=Add(),
														right=Constant(
															value=32
														)
													)
												)
											]
										),
										match_case(
											pattern=MatchValue(
												value=Constant(
													value='k'
												)
											),
											body=[
												Assign(
													targets=[
														Name(
															id='result',
															ctx=Store()
														)
													],
													value=BinOp(
														left=Name(
															id='num',
															ctx=Load()
														),
														op=Add(),
														right=Constant(
															value=273.15
														)
													)
												)
											]
										),
										match_case(
											pattern=MatchValue(
												value=Constant(
													value='c'
												)
											),
											body=[
												Assign(
													targets=[
														Name(
															id='result',
															ctx=Store()
														)
													],
													value=Name(
														id='num',
														ctx=Load()
													)
												)
											]
										)
									]
								)
							],
							orelse=[
								If(
									test=Compare(
										left=Name(
											id='frm',
											ctx=Load()
										),
										ops=[
											Eq()
										],
										comparators=[
											Constant(
												value='k'
											)
										]
									),
									body=[
										Match(
											subject=Name(
												id='to',
												ctx=Load()
											),
											cases=[
												match_case(
													pattern=MatchValue(
														value=Constant(
															value='f'
														)
													),
													body=[
														Assign(
															targets=[
																Name(
																	id='result',
																	ctx=Store()
																)
															],
															value=BinOp(
																left=BinOp(
																	left=BinOp(
																		left=BinOp(
																			left=Name(
																				id='num',
																				ctx=Load()
																			),
																			op=Sub(),
																			right=Constant(
																				value=273.15
																			)
																		),
																		op=Mult(),
																		right=Constant(
																			value=9
																		)
																	),
																	op=Div(),
																	right=Constant(
																		value=5
																	)
																),
																op=Add(),
																right=Constant(
																	value=32
																)
															)
														)
													]
												),
												match_case(
													pattern=MatchValue(
														value=Constant(
															value='c'
														)
													),
													body=[
														Assign(
															targets=[
																Name(
																	id='result',
																	ctx=Store()
																)
															],
															value=BinOp(
																left=Name(
																	id='num',
																	ctx=Load()
																),
																op=Sub(),
																right=Constant(
																	value=273.15
																)
															)
														)
													]
												),
												match_case(
													pattern=MatchValue(
														value=Constant(
															value='k'
														)
													),
													body=[
														Assign(
															targets=[
																Name(
																	id='result',
																	ctx=Store()
																)
															],
															value=Name(
																id='num',
																ctx=Load()
															)
														)
													]
												)
											]
										)
									],
									orelse=[]
								)
							]
						)
					]
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='round',
							ctx=Load()
						),
						args=[
							Name(
								id='result',
								ctx=Load()
							),
							Constant(
								value=2
							)
						],
						keywords=[]
					)
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='test_speed',
			args=arguments(
				posonlyargs=[],
				args=[],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							Constant(
								value='\nTesting speeds:'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='s1',
							ctx=Store()
						)
					],
					value=Constant(
						value=60
					)
				),
				Assign(
					targets=[
						Name(
							id='s2',
							ctx=Store()
						)
					],
					value=Constant(
						value=100
					)
				),
				Assign(
					targets=[
						Name(
							id='s3',
							ctx=Store()
						)
					],
					value=Constant(
						value=25
					)
				),
				Assign(
					targets=[
						Name(
							id='res1',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_speed',
							ctx=Load()
						),
						args=[
							Name(
								id='s1',
								ctx=Load()
							),
							Constant(
								value='mph'
							),
							Constant(
								value='km/h'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res2',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_speed',
							ctx=Load()
						),
						args=[
							Name(
								id='s2',
								ctx=Load()
							),
							Constant(
								value='m/s'
							),
							Constant(
								value='mph'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res3',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_speed',
							ctx=Load()
						),
						args=[
							Name(
								id='s3',
								ctx=Load()
							),
							Constant(
								value='km/h'
							),
							Constant(
								value='m/s'
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='s1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='mph = '
									),
									FormattedValue(
										value=Name(
											id='res1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='km/h'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='s2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='m/s = '
									),
									FormattedValue(
										value=Name(
											id='res2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='mph'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='s3',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='km/h = '
									),
									FormattedValue(
										value=Name(
											id='res3',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='m/s'
									)
								]
							)
						],
						keywords=[]
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='test_area',
			args=arguments(
				posonlyargs=[],
				args=[],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							Constant(
								value='\nTesting areas:'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='a1',
							ctx=Store()
						)
					],
					value=Constant(
						value=10
					)
				),
				Assign(
					targets=[
						Name(
							id='a2',
							ctx=Store()
						)
					],
					value=Constant(
						value=537
					)
				),
				Assign(
					targets=[
						Name(
							id='a3',
							ctx=Store()
						)
					],
					value=Constant(
						value=45
					)
				),
				Assign(
					targets=[
						Name(
							id='res1',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_area',
							ctx=Load()
						),
						args=[
							Name(
								id='a1',
								ctx=Load()
							),
							Constant(
								value='square foot'
							),
							Constant(
								value='square yard'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res2',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_area',
							ctx=Load()
						),
						args=[
							Name(
								id='a2',
								ctx=Load()
							),
							Constant(
								value='in2'
							),
							Constant(
								value='ft2'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res3',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_area',
							ctx=Load()
						),
						args=[
							Name(
								id='a3',
								ctx=Load()
							),
							Constant(
								value='mi2'
							),
							Constant(
								value='km2'
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='a1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='ft^2 = '
									),
									FormattedValue(
										value=Name(
											id='res1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='yd^2'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='a2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='in^2 = '
									),
									FormattedValue(
										value=Name(
											id='res2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='ft^2'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='a3',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='mi^2 = '
									),
									FormattedValue(
										value=Name(
											id='res3',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='km^2'
									)
								]
							)
						],
						keywords=[]
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='test_volume',
			args=arguments(
				posonlyargs=[],
				args=[],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							Constant(
								value='\nTesting volumes:'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='vol1',
							ctx=Store()
						)
					],
					value=Constant(
						value=2
					)
				),
				Assign(
					targets=[
						Name(
							id='vol2',
							ctx=Store()
						)
					],
					value=Constant(
						value=10000
					)
				),
				Assign(
					targets=[
						Name(
							id='vol3',
							ctx=Store()
						)
					],
					value=Constant(
						value=10
					)
				),
				Assign(
					targets=[
						Name(
							id='res1',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_volume',
							ctx=Load()
						),
						args=[
							Name(
								id='vol1',
								ctx=Load()
							),
							Constant(
								value='cubic foot'
							),
							Constant(
								value='gal'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res2',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_volume',
							ctx=Load()
						),
						args=[
							Name(
								id='vol2',
								ctx=Load()
							),
							Constant(
								value='gal'
							),
							Constant(
								value='L'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res3',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_volume',
							ctx=Load()
						),
						args=[
							Name(
								id='vol3',
								ctx=Load()
							),
							Constant(
								value='gal'
							),
							Constant(
								value='qt'
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='vol1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='ft^3 = '
									),
									FormattedValue(
										value=Name(
											id='res1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='gal'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='vol2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='gal = '
									),
									FormattedValue(
										value=Name(
											id='res2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='L'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='vol3',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='gal = '
									),
									FormattedValue(
										value=Name(
											id='res3',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='qt'
									)
								]
							)
						],
						keywords=[]
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='test_my_time',
			args=arguments(
				posonlyargs=[],
				args=[],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							Constant(
								value='\nTesting times:'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='time1',
							ctx=Store()
						)
					],
					value=Constant(
						value=50
					)
				),
				Assign(
					targets=[
						Name(
							id='time2',
							ctx=Store()
						)
					],
					value=Constant(
						value=6
					)
				),
				Assign(
					targets=[
						Name(
							id='time3',
							ctx=Store()
						)
					],
					value=Constant(
						value=36709
					)
				),
				Assign(
					targets=[
						Name(
							id='res1',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_time',
							ctx=Load()
						),
						args=[
							Name(
								id='time1',
								ctx=Load()
							),
							Constant(
								value='day'
							),
							Constant(
								value='second'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res2',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_time',
							ctx=Load()
						),
						args=[
							Name(
								id='time2',
								ctx=Load()
							),
							Constant(
								value='h'
							),
							Constant(
								value='month'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res3',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_time',
							ctx=Load()
						),
						args=[
							Name(
								id='time3',
								ctx=Load()
							),
							Constant(
								value='s'
							),
							Constant(
								value='day'
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='time1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='day = '
									),
									FormattedValue(
										value=Name(
											id='res1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='s'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='time2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='h = '
									),
									FormattedValue(
										value=Name(
											id='res2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='month'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='time3',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='s = '
									),
									FormattedValue(
										value=Name(
											id='res3',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='day'
									)
								]
							)
						],
						keywords=[]
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='test_mass',
			args=arguments(
				posonlyargs=[],
				args=[],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							Constant(
								value='\nTesting masses:'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='mass1',
							ctx=Store()
						)
					],
					value=Constant(
						value=8
					)
				),
				Assign(
					targets=[
						Name(
							id='mass2',
							ctx=Store()
						)
					],
					value=Constant(
						value=150
					)
				),
				Assign(
					targets=[
						Name(
							id='mass3',
							ctx=Store()
						)
					],
					value=Constant(
						value=2
					)
				),
				Assign(
					targets=[
						Name(
							id='res1',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_mass',
							ctx=Load()
						),
						args=[
							Name(
								id='mass1',
								ctx=Load()
							),
							Constant(
								value='g'
							),
							Constant(
								value='mg'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res2',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_mass',
							ctx=Load()
						),
						args=[
							Name(
								id='mass2',
								ctx=Load()
							),
							Constant(
								value='oz'
							),
							Constant(
								value='g'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res3',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_mass',
							ctx=Load()
						),
						args=[
							Name(
								id='mass3',
								ctx=Load()
							),
							Constant(
								value='t'
							),
							Constant(
								value='lb'
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='mass1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='g = '
									),
									FormattedValue(
										value=Name(
											id='res1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='mg'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='mass2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='oz = '
									),
									FormattedValue(
										value=Name(
											id='res2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='g'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='mass3',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='t = '
									),
									FormattedValue(
										value=Name(
											id='res3',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='lb'
									)
								]
							)
						],
						keywords=[]
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='test_temperature',
			args=arguments(
				posonlyargs=[],
				args=[],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							Constant(
								value='\nTesting temperatures:'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='temp1',
							ctx=Store()
						)
					],
					value=Constant(
						value=61
					)
				),
				Assign(
					targets=[
						Name(
							id='temp2',
							ctx=Store()
						)
					],
					value=Constant(
						value=11
					)
				),
				Assign(
					targets=[
						Name(
							id='res1',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_temperature',
							ctx=Load()
						),
						args=[
							Name(
								id='temp1',
								ctx=Load()
							),
							Constant(
								value='f'
							),
							Constant(
								value='c'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res2',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_temperature',
							ctx=Load()
						),
						args=[
							Name(
								id='temp2',
								ctx=Load()
							),
							Constant(
								value='c'
							),
							Constant(
								value='f'
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='temp1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='f = '
									),
									FormattedValue(
										value=Name(
											id='res1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='c'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='temp2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='c = '
									),
									FormattedValue(
										value=Name(
											id='res2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='f'
									)
								]
							)
						],
						keywords=[]
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='test_distance',
			args=arguments(
				posonlyargs=[],
				args=[],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							Constant(
								value='\nTesting distances:'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='dist1',
							ctx=Store()
						)
					],
					value=Constant(
						value=2735
					)
				),
				Assign(
					targets=[
						Name(
							id='dist2',
							ctx=Store()
						)
					],
					value=Constant(
						value=47
					)
				),
				Assign(
					targets=[
						Name(
							id='dist3',
							ctx=Store()
						)
					],
					value=Constant(
						value=1241
					)
				),
				Assign(
					targets=[
						Name(
							id='dist4',
							ctx=Store()
						)
					],
					value=Constant(
						value=1
					)
				),
				Assign(
					targets=[
						Name(
							id='res1',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_distance',
							ctx=Load()
						),
						args=[
							Name(
								id='dist1',
								ctx=Load()
							),
							Constant(
								value='ft'
							),
							Constant(
								value='km'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res2',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_distance',
							ctx=Load()
						),
						args=[
							Name(
								id='dist2',
								ctx=Load()
							),
							Constant(
								value='yard'
							),
							Constant(
								value='in'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res3',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_distance',
							ctx=Load()
						),
						args=[
							Name(
								id='dist3',
								ctx=Load()
							),
							Constant(
								value='mm'
							),
							Constant(
								value='yd'
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='res4',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='convert_distance',
							ctx=Load()
						),
						args=[
							Name(
								id='dist3',
								ctx=Load()
							),
							Constant(
								value='mi'
							),
							Constant(
								value='mm'
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='dist1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='ft = '
									),
									FormattedValue(
										value=Name(
											id='res1',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='km'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='dist2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='yd = '
									),
									FormattedValue(
										value=Name(
											id='res2',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='in'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='dist3',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='mm = '
									),
									FormattedValue(
										value=Name(
											id='res3',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='yd'
									)
								]
							)
						],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[
							JoinedStr(
								values=[
									FormattedValue(
										value=Name(
											id='dist4',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='mi = '
									),
									FormattedValue(
										value=Name(
											id='res4',
											ctx=Load()
										),
										conversion=-1
									),
									Constant(
										value='mm'
									)
								]
							)
						],
						keywords=[]
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='run_tests',
			args=arguments(
				posonlyargs=[],
				args=[],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Expr(
					value=Call(
						func=Name(
							id='test_temperature',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='test_distance',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='test_mass',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='test_my_time',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='test_volume',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='test_area',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='test_speed',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				),
				Expr(
					value=Call(
						func=Name(
							id='print',
							ctx=Load()
						),
						args=[],
						keywords=[]
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='check_unit_type',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='metric',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='L'
							),
							Constant(
								value='mL'
							),
							Constant(
								value='m3'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='imperial',
							ctx=Store()
						)
					],
					value=List(
						elts=[
							Constant(
								value='gal'
							),
							Constant(
								value='qt'
							),
							Constant(
								value='ft3'
							)
						],
						ctx=Load()
					)
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=''
					)
				),
				If(
					test=Compare(
						left=Name(
							id='unit',
							ctx=Load()
						),
						ops=[
							In()
						],
						comparators=[
							Name(
								id='metric',
								ctx=Load()
							)
						]
					),
					body=[
						Assign(
							targets=[
								Name(
									id='result',
									ctx=Store()
								)
							],
							value=Constant(
								value='metric'
							)
						)
					],
					orelse=[
						If(
							test=Compare(
								left=Name(
									id='unit',
									ctx=Load()
								),
								ops=[
									In()
								],
								comparators=[
									Name(
										id='imperial',
										ctx=Load()
									)
								]
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='imperial'
									)
								)
							],
							orelse=[]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='abbreviate',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				If(
					test=Compare(
						left=Call(
							func=Name(
								id='len',
								ctx=Load()
							),
							args=[
								Name(
									id='unit',
									ctx=Load()
								)
							],
							keywords=[]
						),
						ops=[
							Gt()
						],
						comparators=[
							Constant(
								value=3
							)
						]
					),
					body=[
						Assign(
							targets=[
								Name(
									id='unit',
									ctx=Store()
								)
							],
							value=Call(
								func=Attribute(
									value=Name(
										id='unit',
										ctx=Load()
									),
									attr='lower',
									ctx=Load()
								),
								args=[],
								keywords=[]
							)
						)
					],
					orelse=[]
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=''
					)
				),
				Match(
					subject=Name(
						id='unit',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='liter'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='L'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='milliliter'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='mL'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='cubic meter'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='m3'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='gallon'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='gal'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='quart'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='qt'
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='cubic foot'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Constant(
										value='ft3'
									)
								)
							]
						),
						match_case(
							pattern=MatchAs(),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='unit',
										ctx=Load()
									)
								)
							]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='normalize',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='unit'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='unit',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='unit',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Match(
					subject=Name(
						id='unit',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='L'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=1000
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mL'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='num',
										ctx=Load()
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='m3'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=1000000
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='gal'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=3785
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='qt'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=946.4
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='ft3'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Mult(),
										right=Constant(
											value=28320
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchAs(),
							body=[
								Expr(
									value=Call(
										func=Name(
											id='print',
											ctx=Load()
										),
										args=[
											JoinedStr(
												values=[
													Constant(
														value="Unrecognized unit: '"
													), FormattedValue(
														value=Name(
															id='unit', ctx=Load()
														), conversion=-1
													), Constant(
														value="'"
													)
												]
											)
										],
										keywords=[]
									)
								)
							]
						)
					]
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		),
		FunctionDef(
			name='convert_volume',
			args=arguments(
				posonlyargs=[],
				args=[
					arg(
						arg='num'
					),
					arg(
						arg='frm'
					),
					arg(
						arg='to'
					)
				],
				kwonlyargs=[],
				kw_defaults=[],
				defaults=[]
			),
			body=[
				Assign(
					targets=[
						Name(
							id='frm',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='to',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='abbreviate',
							ctx=Load()
						),
						args=[
							Name(
								id='to',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='num',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='normalize',
							ctx=Load()
						),
						args=[
							Name(
								id='num',
								ctx=Load()
							),
							Name(
								id='frm',
								ctx=Load()
							)
						],
						keywords=[]
					)
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Constant(
						value=0
					)
				),
				Match(
					subject=Name(
						id='to',
						ctx=Load()
					),
					cases=[
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='L'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=1000
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='mL'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=Name(
										id='num',
										ctx=Load()
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='m3'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=1000000
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='gal'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=3785
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='qt'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=946.4
										)
									)
								)
							]
						),
						match_case(
							pattern=MatchValue(
								value=Constant(
									value='ft3'
								)
							),
							body=[
								Assign(
									targets=[
										Name(
											id='result',
											ctx=Store()
										)
									],
									value=BinOp(
										left=Name(
											id='num',
											ctx=Load()
										),
										op=Div(),
										right=Constant(
											value=28320
										)
									)
								)
							]
						)
					]
				),
				Assign(
					targets=[
						Name(
							id='result',
							ctx=Store()
						)
					],
					value=Call(
						func=Name(
							id='round',
							ctx=Load()
						),
						args=[
							Name(
								id='result',
								ctx=Load()
							),
							Constant(
								value=3
							)
						],
						keywords=[]
					)
				),
				Return(
					value=Name(
						id='result',
						ctx=Load()
					)
				)
			],
			decorator_list=[],
			type_params=[]
		)
	],
	type_ignores=[]
)
